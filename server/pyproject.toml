[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["chado13 <geaya13@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
openai = "^1.16.2"
fastapi = "^0.110.1"
pydantic-settings = "^2.2.1"
uvicorn = "^0.29.0"
requests = "^2.32.3"
jinja2 = "^3.1.4"
numpy = "^2.1.0"
scikit-learn = "^1.5.1"
orjson = "^3.10.7"
aiohttp = "^3.10.8"
polars = "^1.9.0"
pytz = "^2024.2"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.5"
mypy = "^1.11.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
fix = true
exclude = [
    '*.pyi',
    "site-packages",
    "node_modules",
    ".mypy_cache",
    ".ruff_cache",
]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
unfixable = ["B"] # Avoid trying to fix flake8-bugbear (`B`) violations.
preview = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"constants.py" = ["E501"]

[tool.ruff.lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = [
    "fastapi.Body",
    "fastapi.Depends",
    "fastapi.Path",
    "fastapi.Query",
    "fastapi.security.http.HTTPBearer",
]

[tool.ruff.lint.isort]
known-first-party = ["alphaship", "alphaverse"]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.format]
preview = true

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_redefinition = true
show_column_numbers = true
pretty = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_typed = true